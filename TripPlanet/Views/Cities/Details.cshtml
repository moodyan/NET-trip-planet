

@{
    ViewData["Title"] = "City Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model TripPlanet.Models.City
<h3>@Model.Name</h3>
@Html.ActionLink("Edit Dates", "Edit", "Cities", new { id = Model.CityId })
<p>Arrive: @Model.ArrivalDate</p>
<p>Depart: @Model.DepartureDate</p>


<ul class="collapsible popout city" data-collapsible="expandable">
    <li>
        <div class="collapsible-header"><i class="material-icons">stars</i>Activities</div>
        <div class="collapsible-body">
            <span>
                <h4>Activities:</h4>
                @if (ViewBag.Activities.Count != 0)
                {
                    @foreach (var activity in ViewBag.Activities)
                    {
                        <a href="/Activities/Details/@activity.ActivityId">@activity.Name</a><br />
                    }
                    <p>Total Cost: $@ViewBag.ActivityCost</p><br />
                }<br />
                <a class="btn-floating btn-large waves-effect waves-light red" href="/Activities/Create/@Model.CityId"><i class="material-icons">add</i></a>
        </span>
    </div>
</li>
<li>
    <div class="collapsible-header"><i class="material-icons">hotel</i>Lodging</div>
    <div class="collapsible-body">
        <span><h4>Lodging:</h4>
        @if (ViewBag.Lodging.Count != 0)
        {
            @foreach (var lodging in ViewBag.Lodging)
            {
                <a href="/Lodgings/Details/@lodging.LodgingId">@lodging.Name</a><br />
            }
            <p>Total Cost: $@ViewBag.LodgingCost</p><br />
        }
        else
        {
            <p>You have not entered any lodging for this city.</p>
        }<br />
        <a class="btn-floating btn-large waves-effect waves-light red" href="/Lodgings/Create/@Model.CityId"><i class="material-icons">add</i></a>
        </span>
    </div>
</li>
<li>
    <div class="collapsible-header"><i class="material-icons">local_airport</i>Transportation</div>
    <div class="collapsible-body">
        <span><h4>Arrival Transportation:</h4>
            @if (ViewBag.ArrivalTransport != null)
            {
                @foreach (var transportation in ViewBag.ArrivalCity)
                {
                    <a href="/Transportations/Details/@ViewBag.ArrivalTransport.TransportationId">@transportation.Name to @Model.Name</a><br />
                }
            }
            else
            {
                <p>You have not entered any arrival information for this city.</p>
            }

            <br /><br />
            <h4>Departure Transportation:</h4>
            @if (ViewBag.DepartureTransport != null)
            {
                @foreach (var transportation in ViewBag.DepartureCity)
                {
                    <a href="/Transportations/Details/@ViewBag.DepartureTransport.TransportationId">
                        @Model.Name to @transportation.Name
                    </a>
                    <p>Total Cost: $@ViewBag.TransportationCost</p><br />
                }
            }
            else
            {
                <p>You have not entered any departure information for this city.</p>
                <a class="btn-floating btn-large waves-effect waves-light red" href="/Transportations/Create/@Model.CityId"><i class="material-icons">add</i></a>
            }
        </span>
    </div>
</li>
</ul>

<p>Budget Used: $@ViewBag.TotalCost</p>
<br /><br />



    @Html.ActionLink("Delete City From Trip", "Delete", "Cities", new { id = Model.CityId }, new { @class= "waves-effect waves-light btn red lighten-1" })
<br />
@Html.ActionLink("Back to Trip", "Details", "Trips", new { id = Model.TripId })


<script type="text/javascript">
    $(document).ready(function () {
        var events = [];
        $.ajax({
            type: "GET",
            url: "/home/GetEvents",
            success: function (data) {
                $.each(data, function (i, v) {
                    events.push({
                        title: v.Subject,
                        description: v.Description,
                        start: moment(v.Start),
                        end: v.End != null ? moment(v.End) : null,
                        color: v.ThemeColor,
                        allDay: v.IsFullDay
                    });
                })

                GenerateCalender(events);
            },
            error: function (error) {
                alert('failed');
            }
        })

        function GenerateCalender(events) {
            $('#calender').fullCalendar('destroy');
            $('#calender').fullCalendar({
                contentHeight: 400,
                defaultDate: new Date(),
                timeFormat: 'h(:mm)a',
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,basicWeek,basicDay,agenda'
                },
                eventLimit: true,
                eventColor: '#378006',
                events: events,
                eventClick: function (calEvent, jsEvent, view) {
                    $('#myModal #eventTitle').text(calEvent.title);
                    var $description = $('<div/>');
                    $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                    if (calEvent.end != null) {
                        $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                    }
                    $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                    $('#myModal #pDetails').empty().html($description);

                    $('#myModal').modal();
                }
            })
        }
    
    });
</script>